
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONleftMENOR_QUEMAYOR_QUEMENOR_O_IGUALMAYOR_O_IGUALleftIGUALDADDIFERENTEleftANDORrightNOTAND CADENA CICLO_FOR CICLO_WHILE CONDICIONAL_CONTRARIO CONDICIONAL_SI CONDICIONAL_SINO DECLARACION_BOOLEAN DECLARACION_ENTERO DECLARACION_FLOAT DECLARACION_STRING DIFERENTE DIVISION DOS_PUNTOS ENTERO ESTRUCTURA_BREAK ESTRUCTURA_CONTINUE FIN_SENTENCIA FLOTANTE IDENTIFICADOR IGUAL IGUALDAD LLAVE_DERECHA LLAVE_IZQUIERDA MAYOR_O_IGUAL MAYOR_QUE MENOR_O_IGUAL MENOR_QUE MULTIPLICACION NOT OR PAREN_DERECHO PAREN_IZQUIERDO RESTA SUMAprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : declaration\n                 | assignment\n                 | conditional\n                 | loop\n                 | expression FIN_SENTENCIAdeclaration : DECLARACION_ENTERO IDENTIFICADOR IGUAL expression FIN_SENTENCIA\n                   | DECLARACION_STRING IDENTIFICADOR IGUAL expression FIN_SENTENCIA\n                   | DECLARACION_FLOAT IDENTIFICADOR IGUAL expression FIN_SENTENCIA\n                   | DECLARACION_BOOLEAN IDENTIFICADOR IGUAL expression FIN_SENTENCIAassignment : IDENTIFICADOR IGUAL expression FIN_SENTENCIAconditional : CONDICIONAL_SI PAREN_IZQUIERDO expression PAREN_DERECHO DOS_PUNTOS statement_list\n                   | CONDICIONAL_SI PAREN_IZQUIERDO expression PAREN_DERECHO DOS_PUNTOS statement_list CONDICIONAL_SINO DOS_PUNTOS statement_listloop : CICLO_WHILE PAREN_IZQUIERDO expression PAREN_DERECHO DOS_PUNTOS statement_listexpression : expression SUMA expression\n                  | expression RESTA expression\n                  | expression MULTIPLICACION expression\n                  | expression DIVISION expression\n                  | expression MENOR_QUE expression\n                  | expression MAYOR_QUE expression\n                  | expression MENOR_O_IGUAL expression\n                  | expression MAYOR_O_IGUAL expression\n                  | expression IGUALDAD expression\n                  | expression DIFERENTE expression\n                  | expression AND expression\n                  | expression OR expressionexpression : NOT expressionexpression : PAREN_IZQUIERDO expression PAREN_DERECHOexpression : ENTERO\n                  | FLOTANTEexpression : CADENAexpression : IDENTIFICADOR'
    
_lr_action_items = {'DECLARACION_ENTERO':([0,2,3,4,5,6,7,21,22,66,72,73,74,75,76,77,78,79,81,82,],[9,9,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,9,9,9,9,9,9,]),'DECLARACION_STRING':([0,2,3,4,5,6,7,21,22,66,72,73,74,75,76,77,78,79,81,82,],[11,11,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,11,11,11,11,11,11,]),'DECLARACION_FLOAT':([0,2,3,4,5,6,7,21,22,66,72,73,74,75,76,77,78,79,81,82,],[12,12,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,12,12,12,12,12,12,]),'DECLARACION_BOOLEAN':([0,2,3,4,5,6,7,21,22,66,72,73,74,75,76,77,78,79,81,82,],[13,13,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,13,13,13,13,13,13,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,9,11,12,13,15,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,66,72,73,74,75,76,77,78,79,81,82,],[10,10,-2,-4,-5,-6,-7,35,37,38,39,42,42,-3,-8,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-13,-9,-10,-11,-12,10,10,10,10,10,10,]),'CONDICIONAL_SI':([0,2,3,4,5,6,7,21,22,66,72,73,74,75,76,77,78,79,81,82,],[14,14,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,14,14,14,14,14,14,]),'CICLO_WHILE':([0,2,3,4,5,6,7,21,22,66,72,73,74,75,76,77,78,79,81,82,],[16,16,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,16,16,16,16,16,16,]),'NOT':([0,2,3,4,5,6,7,15,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,66,72,73,74,75,76,77,78,79,81,82,],[17,17,-2,-4,-5,-6,-7,17,17,-3,-8,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-13,-9,-10,-11,-12,17,17,17,17,17,17,]),'PAREN_IZQUIERDO':([0,2,3,4,5,6,7,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,66,72,73,74,75,76,77,78,79,81,82,],[15,15,-2,-4,-5,-6,-7,40,15,43,15,-3,-8,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-13,-9,-10,-11,-12,15,15,15,15,15,15,]),'ENTERO':([0,2,3,4,5,6,7,15,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,66,72,73,74,75,76,77,78,79,81,82,],[18,18,-2,-4,-5,-6,-7,18,18,-3,-8,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-13,-9,-10,-11,-12,18,18,18,18,18,18,]),'FLOTANTE':([0,2,3,4,5,6,7,15,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,66,72,73,74,75,76,77,78,79,81,82,],[19,19,-2,-4,-5,-6,-7,19,19,-3,-8,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-13,-9,-10,-11,-12,19,19,19,19,19,19,]),'CADENA':([0,2,3,4,5,6,7,15,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,66,72,73,74,75,76,77,78,79,81,82,],[20,20,-2,-4,-5,-6,-7,20,20,-3,-8,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-13,-9,-10,-11,-12,20,20,20,20,20,20,]),'$end':([1,2,3,4,5,6,7,21,22,66,72,73,74,75,78,79,82,],[0,-1,-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,-14,-16,-15,]),'CONDICIONAL_SINO':([3,4,5,6,7,21,22,66,72,73,74,75,78,79,82,],[-2,-4,-5,-6,-7,-3,-8,-13,-9,-10,-11,-12,80,-16,-15,]),'FIN_SENTENCIA':([8,10,18,19,20,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,63,65,67,68,69,],[22,-34,-31,-32,-33,-34,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,66,-30,72,73,74,75,]),'SUMA':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[23,-34,-31,-32,-33,23,-34,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,23,23,-30,23,23,23,23,23,]),'RESTA':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[24,-34,-31,-32,-33,24,-34,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,24,24,-30,24,24,24,24,24,]),'MULTIPLICACION':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[25,-34,-31,-32,-33,25,-34,-29,25,25,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,25,25,-30,25,25,25,25,25,]),'DIVISION':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[26,-34,-31,-32,-33,26,-34,-29,26,26,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,26,26,-30,26,26,26,26,26,]),'MENOR_QUE':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[27,-34,-31,-32,-33,27,-34,-29,27,27,27,27,-21,-22,-23,-24,-25,-26,-27,-28,27,27,-30,27,27,27,27,27,]),'MAYOR_QUE':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[28,-34,-31,-32,-33,28,-34,-29,28,28,28,28,-21,-22,-23,-24,-25,-26,-27,-28,28,28,-30,28,28,28,28,28,]),'MENOR_O_IGUAL':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[29,-34,-31,-32,-33,29,-34,-29,29,29,29,29,-21,-22,-23,-24,-25,-26,-27,-28,29,29,-30,29,29,29,29,29,]),'MAYOR_O_IGUAL':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[30,-34,-31,-32,-33,30,-34,-29,30,30,30,30,-21,-22,-23,-24,-25,-26,-27,-28,30,30,-30,30,30,30,30,30,]),'IGUALDAD':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[31,-34,-31,-32,-33,31,-34,-29,31,31,31,31,31,31,31,31,-25,-26,-27,-28,31,31,-30,31,31,31,31,31,]),'DIFERENTE':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[32,-34,-31,-32,-33,32,-34,-29,32,32,32,32,32,32,32,32,-25,-26,-27,-28,32,32,-30,32,32,32,32,32,]),'AND':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[33,-34,-31,-32,-33,33,-34,-29,33,33,33,33,33,33,33,33,33,33,-27,-28,33,33,-30,33,33,33,33,33,]),'OR':([8,10,18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,63,64,65,67,68,69,],[34,-34,-31,-32,-33,34,-34,-29,34,34,34,34,34,34,34,34,34,34,-27,-28,34,34,-30,34,34,34,34,34,]),'IGUAL':([10,35,37,38,39,],[36,57,59,60,61,]),'PAREN_DERECHO':([18,19,20,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,],[-31,-32,-33,63,-34,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,70,-30,71,]),'DOS_PUNTOS':([70,71,80,],[76,77,81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,76,77,81,],[2,78,79,82,]),'statement':([0,2,76,77,78,79,81,82,],[3,21,3,3,21,21,3,21,]),'declaration':([0,2,76,77,78,79,81,82,],[4,4,4,4,4,4,4,4,]),'assignment':([0,2,76,77,78,79,81,82,],[5,5,5,5,5,5,5,5,]),'conditional':([0,2,76,77,78,79,81,82,],[6,6,6,6,6,6,6,6,]),'loop':([0,2,76,77,78,79,81,82,],[7,7,7,7,7,7,7,7,]),'expression':([0,2,15,17,23,24,25,26,27,28,29,30,31,32,33,34,36,40,43,57,59,60,61,76,77,78,79,81,82,],[8,8,41,44,45,46,47,48,49,50,51,52,53,54,55,56,58,62,64,65,67,68,69,8,8,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','sintax.py',20),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintax.py',24),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintax.py',25),
  ('statement -> declaration','statement',1,'p_statement','sintax.py',32),
  ('statement -> assignment','statement',1,'p_statement','sintax.py',33),
  ('statement -> conditional','statement',1,'p_statement','sintax.py',34),
  ('statement -> loop','statement',1,'p_statement','sintax.py',35),
  ('statement -> expression FIN_SENTENCIA','statement',2,'p_statement','sintax.py',36),
  ('declaration -> DECLARACION_ENTERO IDENTIFICADOR IGUAL expression FIN_SENTENCIA','declaration',5,'p_declaration','sintax.py',40),
  ('declaration -> DECLARACION_STRING IDENTIFICADOR IGUAL expression FIN_SENTENCIA','declaration',5,'p_declaration','sintax.py',41),
  ('declaration -> DECLARACION_FLOAT IDENTIFICADOR IGUAL expression FIN_SENTENCIA','declaration',5,'p_declaration','sintax.py',42),
  ('declaration -> DECLARACION_BOOLEAN IDENTIFICADOR IGUAL expression FIN_SENTENCIA','declaration',5,'p_declaration','sintax.py',43),
  ('assignment -> IDENTIFICADOR IGUAL expression FIN_SENTENCIA','assignment',4,'p_assignment','sintax.py',48),
  ('conditional -> CONDICIONAL_SI PAREN_IZQUIERDO expression PAREN_DERECHO DOS_PUNTOS statement_list','conditional',6,'p_conditional','sintax.py',56),
  ('conditional -> CONDICIONAL_SI PAREN_IZQUIERDO expression PAREN_DERECHO DOS_PUNTOS statement_list CONDICIONAL_SINO DOS_PUNTOS statement_list','conditional',9,'p_conditional','sintax.py',57),
  ('loop -> CICLO_WHILE PAREN_IZQUIERDO expression PAREN_DERECHO DOS_PUNTOS statement_list','loop',6,'p_loop','sintax.py',67),
  ('expression -> expression SUMA expression','expression',3,'p_expression_binop','sintax.py',75),
  ('expression -> expression RESTA expression','expression',3,'p_expression_binop','sintax.py',76),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression_binop','sintax.py',77),
  ('expression -> expression DIVISION expression','expression',3,'p_expression_binop','sintax.py',78),
  ('expression -> expression MENOR_QUE expression','expression',3,'p_expression_binop','sintax.py',79),
  ('expression -> expression MAYOR_QUE expression','expression',3,'p_expression_binop','sintax.py',80),
  ('expression -> expression MENOR_O_IGUAL expression','expression',3,'p_expression_binop','sintax.py',81),
  ('expression -> expression MAYOR_O_IGUAL expression','expression',3,'p_expression_binop','sintax.py',82),
  ('expression -> expression IGUALDAD expression','expression',3,'p_expression_binop','sintax.py',83),
  ('expression -> expression DIFERENTE expression','expression',3,'p_expression_binop','sintax.py',84),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','sintax.py',85),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','sintax.py',86),
  ('expression -> NOT expression','expression',2,'p_expression_not','sintax.py',113),
  ('expression -> PAREN_IZQUIERDO expression PAREN_DERECHO','expression',3,'p_expression_group','sintax.py',117),
  ('expression -> ENTERO','expression',1,'p_expression_number','sintax.py',121),
  ('expression -> FLOTANTE','expression',1,'p_expression_number','sintax.py',122),
  ('expression -> CADENA','expression',1,'p_expression_string','sintax.py',126),
  ('expression -> IDENTIFICADOR','expression',1,'p_expression_identifier','sintax.py',130),
]
